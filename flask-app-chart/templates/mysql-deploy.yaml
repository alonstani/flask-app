apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
spec:
  replicas: {{ .Values.mysql.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
    spec:
      containers:
        - name: mysql
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-app-mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: my-app-mysql-secret
                  key: MYSQL_DATABASE
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-data
          emptyDir: {}
        - name: init-sql
          configMap:
            name: {{ .Release.Name }}-init-sql-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-mysql
spec:
  selector:
    app: my-app-mysql
  ports:
    - port: 3306
  type: ClusterIP

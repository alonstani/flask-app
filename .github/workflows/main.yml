name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GIT_REPO_URL: 'https://github.com/alonstani/flask-app.git'
  BRANCH_NAME: 'master'
  GIT_CREDENTIALS_ID: 'git-credential-id'
  DOCKERHUB_REPO: 'inyouk/flask-app'
  DOCKERHUB_CREDENTIALS_ID: 'docker-credential-id'

jobs:
  setup-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release \
            -y
          
          # Add Docker GPG key
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io -y

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          # Check if Docker Compose is installed correctly
          docker-compose --version

  clone-code:
    runs-on: ubuntu-latest
    needs: setup-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List contents of the root directory after checkout
        run: |
          echo "Listing contents of the current directory after checkout"
          ls -alh

      - name: List contents of flask-app directory (if exists)
        run: |
          echo "Listing contents of flask-app directory"
          if [ -d "flask-app" ]; then
            ls -alh flask-app
          else
            echo "flask-app directory not found."
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: clone-code
    steps:
      - name: Build Docker image
        run: |
          echo "Ensuring docker-compose is available"
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
          
          cd /home/runner/work/flask-app/flask-app
          echo "Listing files in the flask-app directory"
          ls -l
          
          # Build the docker image
          docker-compose build

  run:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Start containers with docker-compose
        run: |
          cd /home/runner/work/flask-app/flask-app
          docker-compose up -d
          sleep 10
          docker ps

  test:
    runs-on: ubuntu-latest
    needs: run
    steps:
      - name: Test Flask app
        run: |
          sleep 5
          docker ps --format "table {{.ID}}\t{{.Image}}\t{{.Names}}"
          curl -f http://localhost:5000 || echo "Flask app is not running as expected"

  push-docker-image:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          cd /home/runner/work/flask-app/flask-app
          IMAGE_TAG="${DOCKERHUB_REPO}:${BRANCH_NAME}-latest"
          docker tag flask-app ${DOCKERHUB_REPO}:${BRANCH_NAME}-latest
          docker push ${DOCKERHUB_REPO}:${BRANCH_NAME}-latest

  push-code:
    runs-on: ubuntu-latest
    needs: push-docker-image
    steps:
      - name: Push code to GitHub
        uses: actions/setup-git@v2
        with:
          user-name: 'inyouk'
          user-email: 'alonstani95@gmail.com'

      - name: Commit and push changes to Git
        run: |
          cd /home/runner/work/flask-app/flask-app
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Automated commit from GitHub Actions"
            git push https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@${GIT_REPO_URL.replace('https://', '')} ${BRANCH_NAME}
          else
            echo "No changes to commit."
          fi



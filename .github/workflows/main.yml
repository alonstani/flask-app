name: Build and Deploy Flask App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Stage 1: Cleanup Stage (only clears workspace if needed)
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up workspace (Optional)
        run: |
          echo "Cleaning workspace before starting the build..."
          rm -rf /home/runner/work/flask-app/flask-app

  # Stage 2: Set up Docker, clone repo, and install dependencies
  setup-docker:
    runs-on: ubuntu-latest
    needs: cleanup
    steps:
      # Step 1: Checkout repository with no clean up
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false  # Ensures repository is not cleared after checkout

      # Step 2: Install Docker and Docker Compose
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release

          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

  # Stage 3: Build Docker image
  build-image:
    runs-on: ubuntu-latest
    needs: setup-docker
    steps:
      # Step 1: Ensure repository is still intact after previous steps
      - name: Listing files in the flask-app directory before building
        run: |
          echo "Listing contents of flask-app directory before build"
          ls -alh /home/runner/work/flask-app/flask-app

      # Step 2: Build Docker Compose
      - name: Build Docker image
        run: |
          cd /home/runner/work/flask-app/flask-app
          docker-compose build

  # Stage 4: Push Docker image to Docker Hub
  push-image:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      # Step 1: Ensure repository is still intact
      - name: Listing files in the flask-app directory before pushing
        run: |
          echo "Listing contents of flask-app directory before push"
          ls -alh /home/runner/work/flask-app/flask-app

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Push image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker-compose push

  # Stage 5: Deploy to AWS (or another service)
  deploy:
    runs-on: ubuntu-latest
    needs: push-image
    steps:
      # Step 1: Ensure repository is still intact
      - name: Listing files in the flask-app directory before deploy
        run: |
          echo "Listing contents of flask-app directory before deploy"
          ls -alh /home/runner/work/flask-app/flask-app

      # Step 2: Deploy to AWS using Dockerrun.aws.json (or other deployment method)
      - name: Deploy to AWS
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment






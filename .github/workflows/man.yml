name: CI/cd Pipeline

on:
  push:
    branches:
      - master      
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  # Dynamically generate a version tag for each run, e.g. ver-12, ver-13, etc.
  IMAGE_VERSION: ver-${{ github.run_number }}

jobs:
  # Step 1: Build and Test Docker Images
  build_and_test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build Docker Image
        run: |
          docker-compose build

      - name: Test Application
        run: |
          docker-compose up -d
          sleep 10
          curl -f http://localhost:5000 && echo "Test Passed!" || (echo "Test Failed!" && exit 1)
          docker-compose down
      - name: Push Docker Image
        run: |
           echo "Stage: Push Docker Image"
           docker-compose push
      - name: Deploy Application
        run: |
          docker-compose down
          docker-compose up -d

  # Step 2: Setup Google Cloud SDK and Authenticate
  setup-gcloud:
    name: Setup google cloud skd
    runs-on: ubuntu-22.04
    needs: build_and_test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Verify gcloud Installation
        run: gcloud --version

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Confirm Active Account
        run: gcloud auth list --format="value(account)"

      - name: Set Project and Region
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/region ${{ secrets.GCP_CLUSTER_REGION }}

  configure-kubectl:
    name: Configure kubectl for GKE
    runs-on: ubuntu-22.04
    needs: setup-gcloud
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Install kubectl (Google Cloud)
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> ~/.bashrc
          source ~/.bashrc

      - name: Verify Plugin Installation
        run: gke-gcloud-auth-plugin --version
 

  # Step 3: Deploy to GKE Cluster with Terraform
  deploy:
    name: Deploy to GKE with Terraform
    runs-on: ubuntu-22.04
    needs: configure-kubectl
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: create GCP Credential file 
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > gcp-key.json
          
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
       
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      
      - name: Install GKE Auth Plugin
        run: gcloud components install gke-gcloud-auth-plugin
         
      - name: Verify Plugin Installation
        run: gke-gcloud-auth-plugin --version
          
      
      
      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo tee /etc/apt/trusted.gpg.d/hashicorp.asc
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          sudo add-apt-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update
          sudo apt-get install terraform  
          terraform --version
      
      - name: Clone the repo and get to the terraform folder
        run: |
           rm -rf flask-app
           git clone https://github.com/alonstani/flask-app.git
           cd flask-app/terraform
           ls  

      - name: Check current working directory
        run: |
          pwd  # Check if we are in the correct directory
      
      - name: Set up GCP Credentials
        run: |
          echo "${{ secrets.GCP_CREDENTIALS_JSON }}" > /tmp/gcp_credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp_credentials.json"
          cat /tmp/gcp_credentials.json
      
      - name: Set up GCP Credentials
        run: |
          echo "${{ secrets.GCP_CREDENTIALS_JSON }}" > /tmp/gcp_credentials.json
          chmod 600 /tmp/gcp_credentials.json  # Secure the file
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp_credentials.json"


      - name: Initialize Terraform
        run: |
          cd flask-app/terraform
          terraform init

      - name: Apply Terraform Plan
        env: 
         TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
         TF_VAR_gke_cluster_name: ${{ secrets.GCP_CLUSTER_NAME }}
         TF_VAR_gke_cluster_region: ${{ secrets.GCP_CLUSTER_REGION }}
         TF_VAR_gcp_credentials_path: /tmp/gcp_credentials.json
        run: | 
         terraform plan -auto-approve 
         terraform apply -auto-approve 
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh
          helm version 

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --region ${{ secrets.GKE_CLUSTER_REGION }}

      - name: Clone Flask App Chart Repository
        run: |
          git clone https://github.com/alonstani/flask-app.git
          cd flask-app/flask-app-chart  # Change into the flask-app-chart directory

      - name: Deploy Flask App using Helm
        run: |
          helm upgrade --install my-app
